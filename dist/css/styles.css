@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&family=Work+Sans:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&display=swap");
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/**
  * TYPOGRAPHY
  * @link https://css-tricks.com/snippets/css/fluid-typography/
**/
/**
* Fonction qui permet de convertir les px en REM
* par exemple : font-size: pxToRem(20); ==> font-size: 1.25rem;
**/
/**
* Fonction qui permet de retourner une valeur sans son unité de mesure
**/
/**
* Système de Breakpoint repris de Bootstrap
**/
/**
* Mixin qui permet de rendre la taille de typographie fluide
**/
/**
* Système de Breakpoint repris de Bootstrap
**/
/**
* Pour les éléments en dehors de la grille
**/
p {
  margin-bottom: 1.25rem;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4 {
  font-family: "Work sans", arial, sans-serif;
  margin: 1.25rem 0 1rem;
  color: #fff;
}

h1, .h1 {
  margin-top: 0;
  /**
  * @link https://css-tricks.com/snippets/css/fluid-typography/
  * Calcul du "scaler" :
  * calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
  * Exemple avec $heading-1 :
  * taille d'écran min    => 48 + (64 - 48) * ((576 - 576) / (1170 - 576)) = 48 + 16 * (0 / 594) = 48
  * taille d'écran medium => 48 + (64 - 48) * ((873 - 576) / (1170 - 576)) = 48 + 16 * (297 / 594) = 56
  * taille d'écran max    => 48 + (64 - 48) * ((1170 - 576) / (1170 - 576)) = 48 + 16 * (594 / 594) = 64
  **/
  /**
  * La fonction CSS clamp() permet de ramener une valeur entre deux bornes inférieure et supérieure. 
  * Cette fonction utilise trois paramètres : une valeur minimale, la valeur à tester et une valeur maximale.
  **/
  font-size: clamp(3rem, calc( 3rem + 16 * ( ( 100vw - 576px ) / 704 )), 4rem);
  line-height: 1.1;
  font-weight: 700;
  letter-spacing: 0.125rem;
}

h2, .h2 {
  /**
  * @link https://css-tricks.com/snippets/css/fluid-typography/
  * Calcul du "scaler" :
  * calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
  * Exemple avec $heading-1 :
  * taille d'écran min    => 48 + (64 - 48) * ((576 - 576) / (1170 - 576)) = 48 + 16 * (0 / 594) = 48
  * taille d'écran medium => 48 + (64 - 48) * ((873 - 576) / (1170 - 576)) = 48 + 16 * (297 / 594) = 56
  * taille d'écran max    => 48 + (64 - 48) * ((1170 - 576) / (1170 - 576)) = 48 + 16 * (594 / 594) = 64
  **/
  /**
  * La fonction CSS clamp() permet de ramener une valeur entre deux bornes inférieure et supérieure. 
  * Cette fonction utilise trois paramètres : une valeur minimale, la valeur à tester et une valeur maximale.
  **/
  font-size: clamp(2.25rem, calc( 2.25rem + 12 * ( ( 100vw - 576px ) / 704 )), 3rem);
  line-height: 1.1;
  font-weight: 700;
  letter-spacing: 0.125rem;
}

h3, .h3 {
  /**
  * @link https://css-tricks.com/snippets/css/fluid-typography/
  * Calcul du "scaler" :
  * calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
  * Exemple avec $heading-1 :
  * taille d'écran min    => 48 + (64 - 48) * ((576 - 576) / (1170 - 576)) = 48 + 16 * (0 / 594) = 48
  * taille d'écran medium => 48 + (64 - 48) * ((873 - 576) / (1170 - 576)) = 48 + 16 * (297 / 594) = 56
  * taille d'écran max    => 48 + (64 - 48) * ((1170 - 576) / (1170 - 576)) = 48 + 16 * (594 / 594) = 64
  **/
  /**
  * La fonction CSS clamp() permet de ramener une valeur entre deux bornes inférieure et supérieure. 
  * Cette fonction utilise trois paramètres : une valeur minimale, la valeur à tester et une valeur maximale.
  **/
  font-size: clamp(1.25rem, calc( 1.25rem + 2 * ( ( 100vw - 576px ) / 704 )), 1.375rem);
  font-weight: 600;
  letter-spacing: 0.0625rem;
}

h4, .h4 {
  /**
  * @link https://css-tricks.com/snippets/css/fluid-typography/
  * Calcul du "scaler" :
  * calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
  * Exemple avec $heading-1 :
  * taille d'écran min    => 48 + (64 - 48) * ((576 - 576) / (1170 - 576)) = 48 + 16 * (0 / 594) = 48
  * taille d'écran medium => 48 + (64 - 48) * ((873 - 576) / (1170 - 576)) = 48 + 16 * (297 / 594) = 56
  * taille d'écran max    => 48 + (64 - 48) * ((1170 - 576) / (1170 - 576)) = 48 + 16 * (594 / 594) = 64
  **/
  /**
  * La fonction CSS clamp() permet de ramener une valeur entre deux bornes inférieure et supérieure. 
  * Cette fonction utilise trois paramètres : une valeur minimale, la valeur à tester et une valeur maximale.
  **/
  font-size: clamp(1rem, calc( 1rem + 2 * ( ( 100vw - 576px ) / 704 )), 1.125rem);
  font-weight: 600;
  letter-spacing: 0.0625rem;
}

body {
  background: #3A3A3A;
  color: #A3A3A3;
  font-family: "Roboto", arial, sans-serif;
  font-weight: 300;
  /**
  * @link https://css-tricks.com/snippets/css/fluid-typography/
  * Calcul du "scaler" :
  * calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
  * Exemple avec $heading-1 :
  * taille d'écran min    => 48 + (64 - 48) * ((576 - 576) / (1170 - 576)) = 48 + 16 * (0 / 594) = 48
  * taille d'écran medium => 48 + (64 - 48) * ((873 - 576) / (1170 - 576)) = 48 + 16 * (297 / 594) = 56
  * taille d'écran max    => 48 + (64 - 48) * ((1170 - 576) / (1170 - 576)) = 48 + 16 * (594 / 594) = 64
  **/
  /**
  * La fonction CSS clamp() permet de ramener une valeur entre deux bornes inférieure et supérieure. 
  * Cette fonction utilise trois paramètres : une valeur minimale, la valeur à tester et une valeur maximale.
  **/
  font-size: clamp(0.875rem, calc( 0.875rem + 2 * ( ( 100vw - 576px ) / 704 )), 1rem);
  line-height: 1.8;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

img {
  max-width: 100%;
  height: auto;
}

a {
  color: #F68A24;
}

address {
  font-style: normal;
}

.noscroll,
.noscroll body {
  overflow: hidden;
}

.list-unstyled {
  list-style: none;
  margin: 0;
  padding: 0;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.wrapper {
  padding-right: 20px;
  padding-left: 20px;
}

section {
  padding: 3.75rem 0;
}

.hero {
  background-color: #333333;
  position: relative;
}

.news {
  margin-top: 5rem;
}

.news__title a {
  color: #fff;
  text-decoration: none;
}

.news__cat a {
  color: #A3A3A3;
  text-decoration: none;
  text-transform: uppercase;
}

.news__link {
  position: relative;
  display: inline-block;
  overflow: hidden;
}

.news__more {
  background-color: #3A3A3A;
  position: absolute;
  bottom: 0;
  right: 0;
  padding: 0.625rem 0 0 1.25rem;
}

.news__img {
  display: block;
}

.projects {
  background: #414141 url("img/topography.svg");
  background-size: 1000px;
}

.projects__title {
  margin-bottom: 3.75rem;
}

.projects__carousel {
  margin-left: -20px;
  margin-right: -20px;
}

@media (min-width: 768px) {
  .projects__carousel {
    margin-right: -20px;
  }
}

@media (min-width: 1280px) {
  .projects__carousel {
    margin-right: calc((1240px - 100vw)/2);
  }
}

.header {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  z-index: 11;
}

.header__logo {
  grid-column: span 3;
  margin-top: 44px;
  z-index: 30;
}

.header__logo a {
  display: inline-block;
  color: #fff;
  text-decoration: none;
}

.menu--open .header__logo a {
  color: #161616;
}

.header__logo svg {
  fill: #fff;
}

.menu--open .header__logo svg {
  fill: #161616;
}

.footer {
  background-color: #333333;
  padding-top: 4.5rem;
}

.footer a {
  color: #fff;
  text-decoration: none;
}

.footer__navItem {
  margin-bottom: 1.25rem;
  /**
  * @link https://css-tricks.com/snippets/css/fluid-typography/
  * Calcul du "scaler" :
  * calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
  * Exemple avec $heading-1 :
  * taille d'écran min    => 48 + (64 - 48) * ((576 - 576) / (1170 - 576)) = 48 + 16 * (0 / 594) = 48
  * taille d'écran medium => 48 + (64 - 48) * ((873 - 576) / (1170 - 576)) = 48 + 16 * (297 / 594) = 56
  * taille d'écran max    => 48 + (64 - 48) * ((1170 - 576) / (1170 - 576)) = 48 + 16 * (594 / 594) = 64
  **/
  /**
  * La fonction CSS clamp() permet de ramener une valeur entre deux bornes inférieure et supérieure. 
  * Cette fonction utilise trois paramètres : une valeur minimale, la valeur à tester et une valeur maximale.
  **/
  font-size: clamp(0.8125rem, calc( 0.8125rem + 1 * ( ( 100vw - 576px ) / 704 )), 0.875rem);
}

.footer__navItem a {
  color: #A3A3A3;
}

.footer__sub {
  /**
  * @link https://css-tricks.com/snippets/css/fluid-typography/
  * Calcul du "scaler" :
  * calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));
  * Exemple avec $heading-1 :
  * taille d'écran min    => 48 + (64 - 48) * ((576 - 576) / (1170 - 576)) = 48 + 16 * (0 / 594) = 48
  * taille d'écran medium => 48 + (64 - 48) * ((873 - 576) / (1170 - 576)) = 48 + 16 * (297 / 594) = 56
  * taille d'écran max    => 48 + (64 - 48) * ((1170 - 576) / (1170 - 576)) = 48 + 16 * (594 / 594) = 64
  **/
  /**
  * La fonction CSS clamp() permet de ramener une valeur entre deux bornes inférieure et supérieure. 
  * Cette fonction utilise trois paramètres : une valeur minimale, la valeur à tester et une valeur maximale.
  **/
  font-size: clamp(0.8125rem, calc( 0.8125rem + 1 * ( ( 100vw - 576px ) / 704 )), 0.875rem);
  margin-top: 6.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-top: 1px solid #3A3A3A;
}

.sn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.sn__item {
  padding: 0.625rem 1.25rem;
}

.btn {
  color: #F68A24;
  text-decoration: none;
  text-transform: uppercase;
  display: inline-block;
}

.btn--underline {
  position: relative;
  z-index: 1;
  padding: 0.125rem 0.25rem;
  -webkit-transition: color .25s ease-in-out;
  transition: color .25s ease-in-out;
}

.btn--underline::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: -1;
  background-color: #F68A24;
  height: 3px;
  -webkit-transition: height .25s ease-in-out;
  transition: height .25s ease-in-out;
}

.btn--more::after {
  content: "+";
  margin-left: 0.625rem;
}

.card {
  text-align: center;
  background: #333333;
  padding: 3.125rem;
  margin: 1.25rem 0;
}

.card__title {
  text-transform: uppercase;
  margin-top: 3.5rem;
}

.card__text {
  margin-bottom: 2.5rem;
}

.carousel {
  height: 100vh;
  position: relative;
}

.carousel__item {
  overflow: hidden;
  opacity: 0;
  visibility: hidden;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
}

.carousel__item.is-loaded {
  opacity: 1;
}

.carousel__item--current, .carousel__item--new {
  opacity: 1;
  visibility: visible;
}

.carousel__infos {
  position: absolute;
  z-index: 2;
  bottom: 25%;
}

.carousel__img-container {
  overflow: hidden;
  height: 100vh;
  position: relative;
}

.carousel__img-wrapper {
  height: 100%;
}

.carousel__img-wrapper::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.6);
  z-index: 1;
}

.carousel__img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.carousel__arrows {
  margin: 50px 0;
  position: absolute;
  bottom: 0;
  z-index: 2;
}

.carouselFkty__item {
  padding: 30px 20px;
}

.carouselFkty__link {
  display: inline-block;
  position: relative;
}

.carouselFkty__link::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.8)), color-stop(25%, rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 25%);
}

.carouselFkty__title {
  position: absolute;
  bottom: 10px;
  left: 0;
  right: 0;
  text-align: center;
  z-index: 2;
}

.arrows {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 28px;
}

.arrows__item {
  background: none;
  border: none;
  width: 64px;
  height: 64px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  outline: none;
  -webkit-transition: .3s ease;
  transition: .3s ease;
}

.arrows__item--border {
  border: 1px solid #666666;
}

.arrows__item--border.arrows__item--next {
  position: relative;
  left: -1px;
}

.arrows__item svg {
  fill: #fff;
  opacity: 0.5;
  -webkit-transition: all .25s ease;
  transition: all .25s ease;
}

.form--newsletter {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-top: 3.75rem;
  border-bottom: 1px solid #fff;
}

input {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  background: none;
  border: none;
  padding: 1rem 0;
  color: #fff;
}

button[type="submit"] {
  background: none;
  border: none;
  color: #F68A24;
  text-transform: uppercase;
}

:focus {
  outline: 0;
  background: none;
}

.menu {
  visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 20;
  background: #fff;
  color: #161616;
  opacity: 0;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

@media (max-width: 1279.98px) {
  .menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}

.menu--open .menu {
  visibility: visible;
  opacity: 1;
}

.menu a {
  color: #161616;
  text-decoration: none;
}

.menu__socialNetworks {
  margin-bottom: 100px;
}

.menu__contact {
  display: none;
}

.contact__title {
  text-transform: uppercase;
  letter-spacing: 0.25rem;
  color: #161616;
  margin: 0 0 1rem;
}

.contact__item {
  color: #A3A3A3;
  background: #fff;
  padding: 30px;
}

.contact a {
  color: #A3A3A3;
}

/* Icone de menu hamburger */
.hamburger {
  position: absolute;
  top: 44px;
  right: 10vw;
  width: 48px;
  height: 48px;
  z-index: 30;
  background: none;
  border: none;
  cursor: pointer;
}

.hamburger:hover .hamburger__line--1 {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
}

.menu--open .hamburger:hover .hamburger__line--1 {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.hamburger__line {
  background: #fff;
  height: 2px;
  width: 100%;
  position: absolute;
  border-radius: 2px;
  right: 0;
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
  -webkit-transform-origin: right;
          transform-origin: right;
}

.hamburger__line--1 {
  top: 33%;
  -webkit-transform: scaleX(0.5);
          transform: scaleX(0.5);
}

.hamburger__line--2 {
  top: 66%;
}

.menu--open .hamburger__line {
  background: #161616;
}

.menu--open .hamburger__line--1 {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  top: 85%;
}

.menu--open .hamburger__line--2 {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
  top: 15%;
}
/*# sourceMappingURL=styles.css.map */